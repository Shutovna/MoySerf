server:
  port: '8080'

logging:
  level:
    ru:
      shutovna:
        moyserf: DEBUG
    org:
      springframework:
        security: DEBUG
      hibernate:
        SQL: DEBUG
        type:
          descriptor:
            sql:
              BasicBinder: TRACE
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
  file:
    name: logs/application.log
    max-size: 10MB
    max-history: 10

spring:
  application:
    name: MoySerf
  datasource:
    url: ${db.url}
    username: ${db.username}
    password: ${db.password}
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: none
      dialect: org.hibernate.dialect.PostgreSQLDialect
      jdbc:
        lob:
          non_contextual_creation: 'true'
    show-sql: true

  mail:
    username: ${mail.username}
    host: connect.smtp.bz
    password: ${mail.password}
    port: '465'
    properties:
      mail:
        smtps:
          ssl:
            checkserveridentity: 'true'
            trust: '*'
        smtp:
          ssl:
            enable: 'true'


  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${google.client.id}
            clientSecret: ${google.client.secret}
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          facebook:
            clientId: ${facebook.client.id}
            clientSecret: ${facebook.client.secret}
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - public_profile
          github:
            clientId: ${github.client.id}
            clientSecret: ${github.client.secret}
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - user:email
              - read:user
        provider:
          facebook:
            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
            userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
          ok:
            authorization-uri: https://connect.ok.ru/oauth/authorize
            token-uri: https://api.ok.ru/oauth/token.do
            user-info-uri: https://api.ok.ru/api/users/getCurrentUser
            user-name-attribute: uid
app:
  auth:
    tokenSecret: ${token.secret}
    tokenExpirationMsec: 864000000
  cors:
    allowedOrigins: http://localhost:3000,http://localhost:8080,http://localhost:5173
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - http://localhost:8080/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect
  frontend:
    port: 3000

management:
  endpoints:
    web:
      exposure:
        include: health,info,mappings,beans


google:
  recaptcha:
    key:
      site: 6LefKOAUAAAAAE9c8M_Das3vwhlMPmkFTAzvxokN
      secret: 6LefKOAUAAAAAGs0hOsCoOBu14TKDGu100LkpnVo
      threshold: '0.5'


support:
  email: support@moyserf.ru


purge:
  cron:
    expression: 0 0 5 * * ?